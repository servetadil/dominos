@model Dominos.Web.Models.ShoppingCartModel

<div class="panel panel-default">
    <div class="panel-heading">
        <h3>Sepetim</h3>
    </div>

    <div class="panel-body">
        <div class="row">
            <div class="col-12 col-lg-12">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Ürün</th>
                            <th>Adet</th>
                            <th>Fiyat</th>
                            <th>Toplam</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>
                                    <button type="button" class="btn btn-labeled btn-danger btn-delete" data-shoppingCartItemId="@item.Id">
                                        <span class="btn-label"><i class="glyphicon glyphicon-remove"></i></span>
                                    </button>
                                </td>
                                <td>
                                    @item.Title
                                </td>
                                <td>
                                    <div class="input-group col-md-3">
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-default btn-number" data-type="minus" data-field="quant[@item.Id]">
                                                <span class="glyphicon glyphicon-minus"></span>
                                            </button>
                                        </span>
                                        <input type="text" name="quant[@item.Id]" class="form-control input-number" data-shoppingCartItemId="@item.Id" value="@item.Quantity" min="1" max="99">
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-default btn-number" data-type="plus" data-field="quant[@item.Id]">
                                                <span class="glyphicon glyphicon-plus"></span>
                                            </button>
                                        </span>
                                    </div>
                                </td>
                                <td>
                                    @item.FormattedPrice
                                </td>
                                <td>
                                    @item.FormattedTotalPrice
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <hr>
                <dl class="dl-horizontal pull-right">
                    <dt>Ara Toplam:</dt>
                    <dd>@Model.FormattedTotalPrice</dd>
                    @*<dt>İndirim :</dt>
                        <dd>1.25</dd>*@
                    <dt>Toplam:</dt>
                    <dd>@Model.FormattedTotalPrice</dd>
                </dl>
                <div class="clearfix"></div>

            </div>
        </div>
    </div>
    <div class="panel-footer">
        <div class="row">
            <div class="col-lg-12">
                <button type="submit" class="btn btn-success pull-right">
                    <i class="icon-ok-sign"></i> Ödeme Yap
                </button>
            </div>
        </div>
    </div>
</div>

@section script{
    <script>
        $(function () {

            $('.btn-number').click(function (e) {
                e.preventDefault();

                fieldName = $(this).attr('data-field');
                type = $(this).attr('data-type');
                var input = $("input[name='" + fieldName + "']");
                var currentVal = parseInt(input.val());
                if (!isNaN(currentVal)) {
                    if (type == 'minus') {

                        if (currentVal > input.attr('min')) {
                            input.val(currentVal - 1).change();
                        }
                        if (parseInt(input.val()) == input.attr('min')) {
                            $(this).attr('disabled', true);
                        }

                    } else if (type == 'plus') {

                        if (currentVal < input.attr('max')) {
                            input.val(currentVal + 1).change();
                        }
                        if (parseInt(input.val()) == input.attr('max')) {
                            $(this).attr('disabled', true);
                        }

                    }

                    var shoppingCartItemId = input.attr("data-shoppingCartItemId");
                    var quantity = input.val();

                    ShoppingCart.setQuantity(shoppingCartItemId, quantity, function (data) {
                        if (data.Success) {
                            location.href = location.href;
                        }
                    });

                } else {
                    input.val(0);
                }
            });
            $('.input-number').focusin(function () {
                $(this).data('oldValue', $(this).val());
            });
            $('.input-number').change(function () {

                minValue = parseInt($(this).attr('min'));
                maxValue = parseInt($(this).attr('max'));
                valueCurrent = parseInt($(this).val());

                name = $(this).attr('name');
                if (valueCurrent >= minValue) {
                    $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
                } else {
                    alert('Sorry, the minimum value was reached');
                    $(this).val($(this).data('oldValue'));
                }
                if (valueCurrent <= maxValue) {
                    $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
                } else {
                    alert('Sorry, the maximum value was reached');
                    $(this).val($(this).data('oldValue'));
                }



            });
            $(".input-number").keydown(function (e) {
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    (e.keyCode >= 35 && e.keyCode <= 39)) {

                    return;
                }
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });
            $(".input-number").focusout(function () {
                var shoppingCartItemId = $(this).attr("data-shoppingCartItemId");
                var quantity = $(this).val();

                ShoppingCart.setQuantity(shoppingCartItemId, quantity, function (data) {
                    if (data.Success) {
                        location.href = location.href;
                    }
                });
            })

            $(".btn-delete").click(function () {
                var shoppingCartItemId = $(this).attr("data-shoppingCartItemId");

                ShoppingCart.setQuantity(shoppingCartItemId, 0, function (data) {
                    if (data.Success) {
                        location.href = location.href;
                    }
                });
            });
        });
    </script>
}